{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\ud83d\udc0d\ud83c\udf6a Yet another Python cookiecutter A strongly opinionated, bleeding-edge Python template Quickstart \u00a4 Install the latest Cookiecutter pip install -U cookiecutter and generate a Python package project: cookiecutter gh:billsioros/cookiecutter-pypackage An up-to-date instance of the cookicutter template can be found here Features \u00a4 Dependency tracking using Poetry Test automation with Tox Documentation with MkDocs , Material for MkDocs and GitHub Pages Automated dependency and security updates with Renovate Formatting provided by black and isort Testing setup with pytest Coverage reports with Coverage.py and Codecov Static type checking by mypy Security checks with CodeQL Linting provided by Flakehell and wemake-python-styleguide Automatic documentation from source code via mkdocstrings Git hooks managed by pre-commit . Development tasks (lint, format, test, etc) provided by Poe The Poet CI facilitated by Github Actions Automated CHANGELOG generation, GitHub releases and PyPI releases facilitated by Python Semantic Release License scanning provided by FOSSA Manage project labels with GitHub Labeler Preview documentation changes introduced via a PR on surge Automatically fix typos in your source code and documentation via Misspell Fixer The template supports Python 3.7 or higher. Documentation \u00a4 The project's documentation can be found here . Support the project \u00a4 Feel free to Buy me a coffee! \u2615 . Contributing \u00a4 If you would like to contribute to the project, please go through the Contributing Guidelines first.","title":"Overview"},{"location":"#quickstart","text":"Install the latest Cookiecutter pip install -U cookiecutter and generate a Python package project: cookiecutter gh:billsioros/cookiecutter-pypackage An up-to-date instance of the cookicutter template can be found here","title":"Quickstart"},{"location":"#features","text":"Dependency tracking using Poetry Test automation with Tox Documentation with MkDocs , Material for MkDocs and GitHub Pages Automated dependency and security updates with Renovate Formatting provided by black and isort Testing setup with pytest Coverage reports with Coverage.py and Codecov Static type checking by mypy Security checks with CodeQL Linting provided by Flakehell and wemake-python-styleguide Automatic documentation from source code via mkdocstrings Git hooks managed by pre-commit . Development tasks (lint, format, test, etc) provided by Poe The Poet CI facilitated by Github Actions Automated CHANGELOG generation, GitHub releases and PyPI releases facilitated by Python Semantic Release License scanning provided by FOSSA Manage project labels with GitHub Labeler Preview documentation changes introduced via a PR on surge Automatically fix typos in your source code and documentation via Misspell Fixer The template supports Python 3.7 or higher.","title":"Features"},{"location":"#documentation","text":"The project's documentation can be found here .","title":"Documentation"},{"location":"#support-the-project","text":"Feel free to Buy me a coffee! \u2615 .","title":"Support the project"},{"location":"#contributing","text":"If you would like to contribute to the project, please go through the Contributing Guidelines first.","title":"Contributing"},{"location":"CHANGELOG/","text":"Changelog \u00a4 All notable changes to this project will be documented in this file. This project adheres to Semantic Versioning . See Conventional Commits for commit guidelines. v0.3.4 (2021-09-11) \u00a4 Fix \u00a4 main: Add cpr id to peter-evans/create-pull-request ( 0f56e29 ) Documentation \u00a4 main: Mention some more features ( 4ae367c ) template: Change pip install directive ( cf8cb37 ) main: Add missing feature links ( 46d8cbe ) template: Add icons ( af8d403 ) main: Include features section ( f379f55 ) template: Add citation ( 50323eb ) template: Add project description ( 5c0b05a ) See all commits in this version v0.3.3 (2021-09-10) \u00a4 Fix \u00a4 main: Print actual cmd on post_gen_hooks error ( aca2b29 ) Documentation \u00a4 main: Add license scanning badge to README ( fed96ac ) template: Add license scanning badge to README ( e1a5f11 ) See all commits in this version v0.3.2 (2021-09-09) \u00a4 Fix \u00a4 main: Remove invalid type-check testenv from tox.ini ( 591e270 ) main: Test commands via poetry on test suite ( 92cc32b ) main: Assert result.exception is None before proceeding ( f3a103e ) main: PosixPath attribute errors ( e9a1458 ) template: Generate license locally ( 6b1de5b ) main: Invalid pathlib.Path usage ( d1df22b ) See all commits in this version v0.3.1 (2021-09-07) \u00a4 Fix \u00a4 Get rid of DeprecationWarning error(s) ( f231ce4 ) Generate license regardless of skip_setup ( b49fa86 ) Documentation \u00a4 main: Remove all-contributors section ( 0a09992 ) See all commits in this version v0.3.0 (2021-09-07) \u00a4 Feature \u00a4 main: Include tests ( 47657e0 ) Documentation \u00a4 template: Uppercase license in URLs ( 76a38eb ) main: Remove codecov badge ( 261f944 ) template: Update buymeacoffee badge href ( e1645a3 ) See all commits in this version v0.2.1 (2021-09-06) \u00a4 Fix \u00a4 Set skip_setup to True when creating a PR ( b2c028f ) See all commits in this version v0.2.0 (2021-09-06) \u00a4 Feature \u00a4 main: Add validate_project_name validator ( eb535a9 ) Add generate_license task ( 365e0e0 ) main: Add cookiecutter pre/post gen hooks ( c1aeac8 ) Fix \u00a4 main: skip_setup when creating a pull request ( 108ef3f ) Documentation \u00a4 template: Add renovate and buymeacoffee badges ( de2c7cd ) template: Add custom license url ( 1f7deba ) template: Add basic module documentation ( bd61f81 ) See all commits in this version v0.1.3 (2021-09-01) \u00a4 Fix \u00a4 template: black & isort failing due to missing newline ( 86981f1 ) See all commits in this version v0.1.2 (2021-08-28) \u00a4 Fix \u00a4 Remove .git from github_repository input variable ( 41cc778 ) See all commits in this version v0.1.1 (2021-08-28) \u00a4 Fix \u00a4 main: Unable to process command set-output ( 101e234 ) See all commits in this version v0.1.0 (2021-08-27) \u00a4 Feature \u00a4 Add the github_repository input variable ( dbf23f4 ) See all commits in this version v0.0.10 (2021-08-27) \u00a4 Fix \u00a4 template: mypy does not apply to this repository ( f8623e6 ) See all commits in this version v0.0.9 (2021-08-27) \u00a4 Fix \u00a4 main: Create empty dist folder on ci ( 48ca83a ) See all commits in this version v0.0.8 (2021-08-27) \u00a4 Fix \u00a4 template: mypy does not apply to this repository ( 08aca7d ) See all commits in this version v0.0.7 (2021-08-27) \u00a4 Fix \u00a4 template: flakehell & mypy errors ( 84bda24 ) See all commits in this version v0.0.6 (2021-08-27) \u00a4 Fix \u00a4 global: mypy and flakehell invocation errors ( fbdc7ae ) See all commits in this version v0.0.5 (2021-08-27) \u00a4 Fix \u00a4 template: Correct coverage path ( ab58ce5 ) See all commits in this version v0.0.4 (2021-08-27) \u00a4 Fix \u00a4 template: Utilize package_name variable ( 2ce52cf ) See all commits in this version v0.0.3 (2021-08-26) \u00a4 Fix \u00a4 template: Follow the src standard layout ( 8f7927b ) See all commits in this version v0.0.2 (2021-08-24) \u00a4 Fix \u00a4 main: skip_install by default ( 44e1e5d ) Documentation \u00a4 template: Move Credits to the end ( c4ea9d5 ) template: Change badge style to flat ( 476977a ) template: Change title ( 765b262 ) main: Change title ( d421ee3 ) template: Change Gitpod badge ( 6902d68 ) main: Center align title ( f313476 ) See all commits in this version v0.0.1 (2021-08-20) \u00a4 Fix \u00a4 main: Docs not rendering correctly ( 997a87d ) cookiecutter: Docs not rendering correctly ( fbf5d34 ) Correct context errors ( 4118ac5 ) Documentation \u00a4 template: Keep LICENSE date up-to-date ( 12a54dc ) template: Enhance sub- README s ( 4d38605 ) template: Remove SPOTIFY section ( 3479c9b ) main: Change mkdocs.site_description ( f70f7bc ) main: Remove SPOTIFY sections ( 148bd71 ) main: Correct github discussions url ( a499e1e ) Add Quickstart section ( 1d5890a ) Add credits ( 9a1d718 ) See all commits in this version","title":"Changelog"},{"location":"CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. This project adheres to Semantic Versioning . See Conventional Commits for commit guidelines.","title":"Changelog"},{"location":"CHANGELOG/#v034-2021-09-11","text":"","title":"v0.3.4 (2021-09-11)"},{"location":"CHANGELOG/#fix","text":"main: Add cpr id to peter-evans/create-pull-request ( 0f56e29 )","title":"Fix"},{"location":"CHANGELOG/#documentation","text":"main: Mention some more features ( 4ae367c ) template: Change pip install directive ( cf8cb37 ) main: Add missing feature links ( 46d8cbe ) template: Add icons ( af8d403 ) main: Include features section ( f379f55 ) template: Add citation ( 50323eb ) template: Add project description ( 5c0b05a ) See all commits in this version","title":"Documentation"},{"location":"CHANGELOG/#v033-2021-09-10","text":"","title":"v0.3.3 (2021-09-10)"},{"location":"CHANGELOG/#fix_1","text":"main: Print actual cmd on post_gen_hooks error ( aca2b29 )","title":"Fix"},{"location":"CHANGELOG/#documentation_1","text":"main: Add license scanning badge to README ( fed96ac ) template: Add license scanning badge to README ( e1a5f11 ) See all commits in this version","title":"Documentation"},{"location":"CHANGELOG/#v032-2021-09-09","text":"","title":"v0.3.2 (2021-09-09)"},{"location":"CHANGELOG/#fix_2","text":"main: Remove invalid type-check testenv from tox.ini ( 591e270 ) main: Test commands via poetry on test suite ( 92cc32b ) main: Assert result.exception is None before proceeding ( f3a103e ) main: PosixPath attribute errors ( e9a1458 ) template: Generate license locally ( 6b1de5b ) main: Invalid pathlib.Path usage ( d1df22b ) See all commits in this version","title":"Fix"},{"location":"CHANGELOG/#v031-2021-09-07","text":"","title":"v0.3.1 (2021-09-07)"},{"location":"CHANGELOG/#fix_3","text":"Get rid of DeprecationWarning error(s) ( f231ce4 ) Generate license regardless of skip_setup ( b49fa86 )","title":"Fix"},{"location":"CHANGELOG/#documentation_2","text":"main: Remove all-contributors section ( 0a09992 ) See all commits in this version","title":"Documentation"},{"location":"CHANGELOG/#v030-2021-09-07","text":"","title":"v0.3.0 (2021-09-07)"},{"location":"CHANGELOG/#feature","text":"main: Include tests ( 47657e0 )","title":"Feature"},{"location":"CHANGELOG/#documentation_3","text":"template: Uppercase license in URLs ( 76a38eb ) main: Remove codecov badge ( 261f944 ) template: Update buymeacoffee badge href ( e1645a3 ) See all commits in this version","title":"Documentation"},{"location":"CHANGELOG/#v021-2021-09-06","text":"","title":"v0.2.1 (2021-09-06)"},{"location":"CHANGELOG/#fix_4","text":"Set skip_setup to True when creating a PR ( b2c028f ) See all commits in this version","title":"Fix"},{"location":"CHANGELOG/#v020-2021-09-06","text":"","title":"v0.2.0 (2021-09-06)"},{"location":"CHANGELOG/#feature_1","text":"main: Add validate_project_name validator ( eb535a9 ) Add generate_license task ( 365e0e0 ) main: Add cookiecutter pre/post gen hooks ( c1aeac8 )","title":"Feature"},{"location":"CHANGELOG/#fix_5","text":"main: skip_setup when creating a pull request ( 108ef3f )","title":"Fix"},{"location":"CHANGELOG/#documentation_4","text":"template: Add renovate and buymeacoffee badges ( de2c7cd ) template: Add custom license url ( 1f7deba ) template: Add basic module documentation ( bd61f81 ) See all commits in this version","title":"Documentation"},{"location":"CHANGELOG/#v013-2021-09-01","text":"","title":"v0.1.3 (2021-09-01)"},{"location":"CHANGELOG/#fix_6","text":"template: black & isort failing due to missing newline ( 86981f1 ) See all commits in this version","title":"Fix"},{"location":"CHANGELOG/#v012-2021-08-28","text":"","title":"v0.1.2 (2021-08-28)"},{"location":"CHANGELOG/#fix_7","text":"Remove .git from github_repository input variable ( 41cc778 ) See all commits in this version","title":"Fix"},{"location":"CHANGELOG/#v011-2021-08-28","text":"","title":"v0.1.1 (2021-08-28)"},{"location":"CHANGELOG/#fix_8","text":"main: Unable to process command set-output ( 101e234 ) See all commits in this version","title":"Fix"},{"location":"CHANGELOG/#v010-2021-08-27","text":"","title":"v0.1.0 (2021-08-27)"},{"location":"CHANGELOG/#feature_2","text":"Add the github_repository input variable ( dbf23f4 ) See all commits in this version","title":"Feature"},{"location":"CHANGELOG/#v0010-2021-08-27","text":"","title":"v0.0.10 (2021-08-27)"},{"location":"CHANGELOG/#fix_9","text":"template: mypy does not apply to this repository ( f8623e6 ) See all commits in this version","title":"Fix"},{"location":"CHANGELOG/#v009-2021-08-27","text":"","title":"v0.0.9 (2021-08-27)"},{"location":"CHANGELOG/#fix_10","text":"main: Create empty dist folder on ci ( 48ca83a ) See all commits in this version","title":"Fix"},{"location":"CHANGELOG/#v008-2021-08-27","text":"","title":"v0.0.8 (2021-08-27)"},{"location":"CHANGELOG/#fix_11","text":"template: mypy does not apply to this repository ( 08aca7d ) See all commits in this version","title":"Fix"},{"location":"CHANGELOG/#v007-2021-08-27","text":"","title":"v0.0.7 (2021-08-27)"},{"location":"CHANGELOG/#fix_12","text":"template: flakehell & mypy errors ( 84bda24 ) See all commits in this version","title":"Fix"},{"location":"CHANGELOG/#v006-2021-08-27","text":"","title":"v0.0.6 (2021-08-27)"},{"location":"CHANGELOG/#fix_13","text":"global: mypy and flakehell invocation errors ( fbdc7ae ) See all commits in this version","title":"Fix"},{"location":"CHANGELOG/#v005-2021-08-27","text":"","title":"v0.0.5 (2021-08-27)"},{"location":"CHANGELOG/#fix_14","text":"template: Correct coverage path ( ab58ce5 ) See all commits in this version","title":"Fix"},{"location":"CHANGELOG/#v004-2021-08-27","text":"","title":"v0.0.4 (2021-08-27)"},{"location":"CHANGELOG/#fix_15","text":"template: Utilize package_name variable ( 2ce52cf ) See all commits in this version","title":"Fix"},{"location":"CHANGELOG/#v003-2021-08-26","text":"","title":"v0.0.3 (2021-08-26)"},{"location":"CHANGELOG/#fix_16","text":"template: Follow the src standard layout ( 8f7927b ) See all commits in this version","title":"Fix"},{"location":"CHANGELOG/#v002-2021-08-24","text":"","title":"v0.0.2 (2021-08-24)"},{"location":"CHANGELOG/#fix_17","text":"main: skip_install by default ( 44e1e5d )","title":"Fix"},{"location":"CHANGELOG/#documentation_5","text":"template: Move Credits to the end ( c4ea9d5 ) template: Change badge style to flat ( 476977a ) template: Change title ( 765b262 ) main: Change title ( d421ee3 ) template: Change Gitpod badge ( 6902d68 ) main: Center align title ( f313476 ) See all commits in this version","title":"Documentation"},{"location":"CHANGELOG/#v001-2021-08-20","text":"","title":"v0.0.1 (2021-08-20)"},{"location":"CHANGELOG/#fix_18","text":"main: Docs not rendering correctly ( 997a87d ) cookiecutter: Docs not rendering correctly ( fbf5d34 ) Correct context errors ( 4118ac5 )","title":"Fix"},{"location":"CHANGELOG/#documentation_6","text":"template: Keep LICENSE date up-to-date ( 12a54dc ) template: Enhance sub- README s ( 4d38605 ) template: Remove SPOTIFY section ( 3479c9b ) main: Change mkdocs.site_description ( f70f7bc ) main: Remove SPOTIFY sections ( 148bd71 ) main: Correct github discussions url ( a499e1e ) Add Quickstart section ( 1d5890a ) Add credits ( 9a1d718 ) See all commits in this version","title":"Documentation"},{"location":"CODE_OF_CONDUCT/","text":"Contributor Covenant Code of Conduct \u00a4 Our Pledge \u00a4 In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to make participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. Our Standards \u00a4 Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Our Responsibilities \u00a4 Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful. Scope \u00a4 This Code of Conduct applies within all project spaces, and it also applies when an individual is representing the project or its community in public spaces. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers. Enforcement \u00a4 Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting one of the project maintainers listed below. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership. Project Maintainers \u00a4 Vasilis Sioros < billsioros97@gmail.com > Attribution \u00a4 This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq","title":"Code Of Conduct"},{"location":"CODE_OF_CONDUCT/#contributor-covenant-code-of-conduct","text":"","title":"Contributor Covenant Code of Conduct"},{"location":"CODE_OF_CONDUCT/#our-pledge","text":"In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to make participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.","title":"Our Pledge"},{"location":"CODE_OF_CONDUCT/#our-standards","text":"Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting","title":"Our Standards"},{"location":"CODE_OF_CONDUCT/#our-responsibilities","text":"Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.","title":"Our Responsibilities"},{"location":"CODE_OF_CONDUCT/#scope","text":"This Code of Conduct applies within all project spaces, and it also applies when an individual is representing the project or its community in public spaces. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.","title":"Scope"},{"location":"CODE_OF_CONDUCT/#enforcement","text":"Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting one of the project maintainers listed below. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.","title":"Enforcement"},{"location":"CODE_OF_CONDUCT/#project-maintainers","text":"Vasilis Sioros < billsioros97@gmail.com >","title":"Project Maintainers"},{"location":"CODE_OF_CONDUCT/#attribution","text":"This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq","title":"Attribution"},{"location":"CONTRIBUTING/","text":"Contributing \u00a4 Hello and thank you for considering contributing to cookiecutter-pypackage ! Reading and following these guidelines will help us make the contribution process easy and effective for everyone involved. Code of Conduct \u00a4 By participating and contributing to this project, you agree to uphold our Code of Conduct . Getting Help \u00a4 In case all you need is an answer to a question, please refrain from opening an issue and instead visit the project's discussion page . Getting Started \u00a4 Contributions are made to this repository via Issues and Pull Requests (PRs). A few general guidelines that cover both: Search for existing Issues and PRs before creating your own. We work hard to make sure issues are handled in a timely manner but, depending on the impact, it could take a while to investigate the root cause. A friendly ping in the comment thread to the submitter or a contributor can help draw attention if your issue is blocking. Issues \u00a4 Issues should be used to report problems with the library or request a new feature or documentation change. When you create a new Issue, a template will be loaded that will guide you through collecting and providing the required information. If you find an Issue that addresses the problem you're having, please add your own reproduction information to the existing issue rather than creating a new one. Adding a reaction can also help in indicating to our maintainers that a particular problem is affecting more than just the reporter. Pull Requests \u00a4 PRs can be a quick way to get your fix or improvement slated for the next release. In general, PRs should: Only fix/add the functionality in question OR address wide-spread whitespace/style issues, not both. Address a single concern in the least number of changed lines as possible. Be accompanied by a complete Pull Request template (loaded automatically when a PR is created). Add unit or integration tests for added or changed functionality. Any code related changes should be accompanied by corresponding changes to the project's documentation. If your pull request introduces a new feature, the corresponding README section must be updated to reflect this. Write clear, concise commit message(s) using the Conventional Commits format. Why? This project only accepts pull requests related to open issues. In case there is no relevant open issue, feel free to create one . For changes that address core functionality or would require breaking changes (e.g. a major release), it's best to open an Issue to discuss your proposal first. This is not required but can save time creating and reviewing changes. In general, we follow the \"fork-and-pull\" Git workflow Fork the repository to your own Github account Clone the project to your machine Create a branch locally with a succinct but descriptive name Commit changes to the branch Push changes to your fork Open a PR in our repository and follow the PR template so that we can efficiently review the changes Setting up a local development environment \u00a4 The following sections assume that you have already locally cloned the repository . Installing Poetry \u00a4 The cookiecutter-pypackage project utilizes the Poetry Python package manager. Having installed Poetry in the global namespace you may now run poetry shell to create a brand new virtual environment and poetry install , in order to install the project's dependencies (development dependencies as well). Installing pre-commit hooks \u00a4 The project utilizes the pre-commit framework. Having created a virtual environment and installed the required dependencies , you may run pre-commit install --install-hooks to install the git hook scripts . Testing via tox \u00a4 We are using tox to automate testing on multiple environments. You can lint the code by simply running tox -e lint Checking for type errors, using Mypy , can be achieved via tox -e type-check Checking if your changes follow the project's formatting standard can be done via tox -e fmt-check You may run tox -e py38 to run the library's unit tests using Python 3.8 (the py37 , py38 and py39 test environments assume, you have installed Python 3.7, 3.8 or 3.9 accordingly) Alternatively, you may simply run tox to execute all of the above (Optional) Installing pyenv \u00a4 pyenv is used, in the context of the cookiecutter-pypackage project, in order to determine the project's compatibility with various versions of Python. Installing pyenv is not strictly required, but it is strongly recommended. Having installed pyenv in the global namespace, you may now run the following snippet, in order to install Python 3.7, 3.8 and 3.9, which, at the time of writing this document, are the only Python versions, supported by cookiecutter-pypackage . pyenv install 3 .7.10 3 .8.9 3 .9.4 pyenv local 3 .7.10 3 .8.9 3 .9.4 You will now be able to run tox (an as a result any test environment subset py3[7|8|9] ), without any test environment being skipped due to skip_missing_interpreters . Feel free to read more about using pyenv , in the context of poetry , here . Performing development operations via poethepoet \u00a4 We are using poethepoet , to perform various development oriented tasks. Formatting, type-checking, running the test suite, as well as a few other operations, can be performed by running poe <task> . Please run poe --help (or poetry run poe --help ), to list all available operations. Documenting your changes \u00a4 cookiecutter-pypackage utilizes MkDocs to build and deploy its documentation to GitHub Pages . The documentation is auto-generated from the python docstrings throughout the source code. As a result, any code related change should be accompanied by a corresponding change to the method's / class's docstring. Having made your changes, please run poe docs and make sure that no error is being raised on build time. Afterwards, open http://localhost:8000/ in your browser of choice and make sure that the documentation renders correctly. Writing your commit message \u00a4 The project's version number and Changelog , depend on a consistent commit history. As a result, your commit message's format is extremely important. Before opening a pull request, please make sure that your commits strictly follow the Conventional Commits format]. Creating a pull request \u00a4 Make sure you review our Pull Request Guidelines , before initiating a PR.","title":"Contributing Guidelines"},{"location":"CONTRIBUTING/#contributing","text":"Hello and thank you for considering contributing to cookiecutter-pypackage ! Reading and following these guidelines will help us make the contribution process easy and effective for everyone involved.","title":"Contributing"},{"location":"CONTRIBUTING/#code-of-conduct","text":"By participating and contributing to this project, you agree to uphold our Code of Conduct .","title":"Code of Conduct"},{"location":"CONTRIBUTING/#getting-help","text":"In case all you need is an answer to a question, please refrain from opening an issue and instead visit the project's discussion page .","title":"Getting Help"},{"location":"CONTRIBUTING/#getting-started","text":"Contributions are made to this repository via Issues and Pull Requests (PRs). A few general guidelines that cover both: Search for existing Issues and PRs before creating your own. We work hard to make sure issues are handled in a timely manner but, depending on the impact, it could take a while to investigate the root cause. A friendly ping in the comment thread to the submitter or a contributor can help draw attention if your issue is blocking.","title":"Getting Started"},{"location":"CONTRIBUTING/#issues","text":"Issues should be used to report problems with the library or request a new feature or documentation change. When you create a new Issue, a template will be loaded that will guide you through collecting and providing the required information. If you find an Issue that addresses the problem you're having, please add your own reproduction information to the existing issue rather than creating a new one. Adding a reaction can also help in indicating to our maintainers that a particular problem is affecting more than just the reporter.","title":"Issues"},{"location":"CONTRIBUTING/#pull-requests","text":"PRs can be a quick way to get your fix or improvement slated for the next release. In general, PRs should: Only fix/add the functionality in question OR address wide-spread whitespace/style issues, not both. Address a single concern in the least number of changed lines as possible. Be accompanied by a complete Pull Request template (loaded automatically when a PR is created). Add unit or integration tests for added or changed functionality. Any code related changes should be accompanied by corresponding changes to the project's documentation. If your pull request introduces a new feature, the corresponding README section must be updated to reflect this. Write clear, concise commit message(s) using the Conventional Commits format. Why? This project only accepts pull requests related to open issues. In case there is no relevant open issue, feel free to create one . For changes that address core functionality or would require breaking changes (e.g. a major release), it's best to open an Issue to discuss your proposal first. This is not required but can save time creating and reviewing changes. In general, we follow the \"fork-and-pull\" Git workflow Fork the repository to your own Github account Clone the project to your machine Create a branch locally with a succinct but descriptive name Commit changes to the branch Push changes to your fork Open a PR in our repository and follow the PR template so that we can efficiently review the changes","title":"Pull Requests"},{"location":"CONTRIBUTING/#setting-up-a-local-development-environment","text":"The following sections assume that you have already locally cloned the repository .","title":"Setting up a local development environment"},{"location":"CONTRIBUTING/#installing-poetry","text":"The cookiecutter-pypackage project utilizes the Poetry Python package manager. Having installed Poetry in the global namespace you may now run poetry shell to create a brand new virtual environment and poetry install , in order to install the project's dependencies (development dependencies as well).","title":"Installing Poetry"},{"location":"CONTRIBUTING/#installing-pre-commit-hooks","text":"The project utilizes the pre-commit framework. Having created a virtual environment and installed the required dependencies , you may run pre-commit install --install-hooks to install the git hook scripts .","title":"Installing pre-commit hooks"},{"location":"CONTRIBUTING/#testing-via-tox","text":"We are using tox to automate testing on multiple environments. You can lint the code by simply running tox -e lint Checking for type errors, using Mypy , can be achieved via tox -e type-check Checking if your changes follow the project's formatting standard can be done via tox -e fmt-check You may run tox -e py38 to run the library's unit tests using Python 3.8 (the py37 , py38 and py39 test environments assume, you have installed Python 3.7, 3.8 or 3.9 accordingly) Alternatively, you may simply run tox to execute all of the above","title":"Testing via tox"},{"location":"CONTRIBUTING/#optional-installing-pyenv","text":"pyenv is used, in the context of the cookiecutter-pypackage project, in order to determine the project's compatibility with various versions of Python. Installing pyenv is not strictly required, but it is strongly recommended. Having installed pyenv in the global namespace, you may now run the following snippet, in order to install Python 3.7, 3.8 and 3.9, which, at the time of writing this document, are the only Python versions, supported by cookiecutter-pypackage . pyenv install 3 .7.10 3 .8.9 3 .9.4 pyenv local 3 .7.10 3 .8.9 3 .9.4 You will now be able to run tox (an as a result any test environment subset py3[7|8|9] ), without any test environment being skipped due to skip_missing_interpreters . Feel free to read more about using pyenv , in the context of poetry , here .","title":"(Optional) Installing pyenv"},{"location":"CONTRIBUTING/#performing-development-operations-via-poethepoet","text":"We are using poethepoet , to perform various development oriented tasks. Formatting, type-checking, running the test suite, as well as a few other operations, can be performed by running poe <task> . Please run poe --help (or poetry run poe --help ), to list all available operations.","title":"Performing development operations via poethepoet"},{"location":"CONTRIBUTING/#documenting-your-changes","text":"cookiecutter-pypackage utilizes MkDocs to build and deploy its documentation to GitHub Pages . The documentation is auto-generated from the python docstrings throughout the source code. As a result, any code related change should be accompanied by a corresponding change to the method's / class's docstring. Having made your changes, please run poe docs and make sure that no error is being raised on build time. Afterwards, open http://localhost:8000/ in your browser of choice and make sure that the documentation renders correctly.","title":"Documenting your changes"},{"location":"CONTRIBUTING/#writing-your-commit-message","text":"The project's version number and Changelog , depend on a consistent commit history. As a result, your commit message's format is extremely important. Before opening a pull request, please make sure that your commits strictly follow the Conventional Commits format].","title":"Writing your commit message"},{"location":"CONTRIBUTING/#creating-a-pull-request","text":"Make sure you review our Pull Request Guidelines , before initiating a PR.","title":"Creating a pull request"},{"location":"LICENSE/","text":"MIT License Copyright (c) 2021-2021 Vasileios Sioros (billsioros) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"}]}